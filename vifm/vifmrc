" vim: filetype=vifm :
" Sample configuration file for vifm (last updated: 2 June, 2019)
" You can edit this file by hand.
" The " character at the beginning of a line comments out the line.
" Blank lines are ignored.
" The basic format for each item is shown with an example.

" ------------------------------------------------------------------------------
set viewcolumns=-80%{name},6{}
set dotfiles
set sort=+dir,+iname,-mode
" set showtabline=always
set tabscope=pane
set relativenumber number
set dirsize=nitems
set vicmd=nvim
set syscalls
set dotdirs=

set trash
set trashdir="~/.local/share/Trash/files/"

" This is how many directories to store in the directory history.

set history=100

" Automatically resolve symbolic links on l or Enter.

set nofollowlinks

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).

 set fastrun

" Natural sort of (version) numbers within text.

set sortnumbers

" Maximum number of changes that can be undone.

set undolevels=100

" Use Vim's format of help file (has highlighting and "hyperlinks").
" If you would rather use a plain text help file set novimhelp.

set vimhelp

" If you would like to run an executable file when you
" press return on the file name set this.

set norunexec

" Selected color scheme
colorscheme gruvbox

" TIME_STAMP_FORMAT=%m/%d/%y-%H:%M
" See man date or man strftime for details.
set timefmt=%m/%d/%y\ %H:%M

" Show list of matches on tab completion in command-line mode
set wildmenu

" Display completions in a form of popup with descriptions of the matches
set wildstyle=popup

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files).  In other view, when available.
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

" Ignore case in search patterns unless it contains at least one uppercase
" letter
set ignorecase
set smartcase

" Don't highlight search results automatically
set nohlsearch

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists
set scrolloff=3

" Don't do too many requests to slow file systems
if !has('win')
    set slowfs=curlftpfs
endif
highlight User1 ctermbg=yellow ctermfg=black
highlight User2 ctermbg=none ctermfg=blue cterm=bold
highlight User3 ctermbg=none ctermfg=red cterm=bold
highlight User4 ctermbg=none ctermfg=yellow cterm=bold
highlight User5 ctermbg=non3 ctermfg=purple

" Set custom status line look
set statusline="%1* %-10t %2* owner:%u:%-7g %5* size:%s %N %3* attr:%A %4* %20d "

" ------------------------------------------------------------------------------

" :mark mark /full/directory/path [filename]

mark h ~/
mark c ~/.config
mark d ~/Downloads
mark p ~/Pictures
mark v ~/Videos
mark o ~/Documents/PKM/ 250\ Betterment
mark k ~/Sources/qmk_firmware/keyboards/moonlander/keymaps/FlowHD keymap.c
" ------------------------------------------------------------------------------

" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command! df df -h %m 2> /dev/null
command! diff nvim -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep nvim "+grep %a"
command! reload :write | restart
command! mkd :mkdir %a
command! mkf :touch %a
command! ripdrag ripdrag -a -x %f
command! print :!lpr %f

command! fzff : set noquickview
    \| let $FZF_PICK = system("fd --hidden -i -H | fzf --height 10 2>/dev/tty")
    \| if $FZF_PICK != ''
    \|      execute system('[ -f "$FZF_PICK" ] && echo goto || echo cd') fnameescape($FZF_PICK)
    \| endif
    \| redraw
" ------------------------------------------------------------------------------

" The file type is for the default programs to be used with
" a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros %f, %F, %d, %F may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.

" For automated FUSE mounts, you must register an extension with :file[x]type
" in one of following formats:
"
" :filetype extensions FUSE_MOUNT|some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables
" %SOURCE_FILE and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"
" :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
" %PARAM and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
" %PARAM value is filled from the first line of file (whole line).
" Example first line for SshMount filetype: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.

filextype *.pdf
        \ zathura %f
fileviewer *.pdf
        \ vifmimg pdf %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear

    filextype *.djvu
        \ zathura %f
    fileviewer *.djvu
        \ vifmimg djvu %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear

    fileviewer *.epub
        \ vifmimg epub %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear

    filextype *.avi,*.mp4,*.wmv,*.mkv,*.mpg,*.mpeg,*.vob,*.mov,*.webm,*.m4v
        \ mpv %f

    fileviewer <video/*>
        \ vifmimg video %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear

    filextype *.xcf
        \ gimp %f
    filetype *.png,*.jpg,*jpeg,*.bmp,*.gif,*.xpm,*.webp
        \ {View in feh}
        \ feh %d --start-at %d/%c 2>/dev/null
    fileviewer <image/*>
        \ vifmimg draw %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear

    fileviewer *.mp3
        \ mp3info
    filextype *.mp3,*.m4a,*.wav
        \ mpv %f
    fileviewer <audio/*>
        \ vifmimg audio %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear

    fileviewer <font/*>
        \ vifmimg font %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear

    fileviewer *.docx
        \ docx2txt %f
    fileviewer *.sh,*.txt,*.config,*.conf,*.vim,*.rc,*.*rc,*.h
        "\ batcat %f
        \ cat %f
    filextype *.sh,*.txt,*.config,*.conf,*.vim,*.rc,*.*rc,*.h
        \ nvim %f

" GETTING ICONS TO DISPLAY IN VIFM
" You need the next 14 lines!

" file types
set classify='üìÅ :dir:/,üöÄ :exe:,üìÑ :reg:,üîó :link:'
" various file names
set classify+='ÔÅ¢ ::../::,Óòî ::*.sh::,Óòù ::*.[hc]pp::,Óòû ::*.[hc]::,Ôáπ ::/^copying|license$/::,Ôáì ::.git/,,*.git/::,üìö ::*.epub,,*.fb2,,*.djvu::,üñ®Ô∏è ::*.pdf::,Ôëè ::*.htm,,*.html,,**.[sx]html,,*.xml::'
" archives
set classify+='üóÉÔ∏è ::*.7z,,*.ace,,*.arj,,*.bz2,,*.cpio,,*.deb,,*.dz,,*.gz,,*.jar,,*.lzh,,*.lzma,,*.rar,,*.rpm,,*.rz,,*.tar,,*.taz,,*.tb2,,*.tbz,,*.tbz2,,*.tgz,,*.tlz,,*.trz,,*.txz,,*.tz,,*.tz2,,*.xz,,*.z,,*.zip,,*.zoo::'
" images
set classify+='üé®::*.bmp,,*.gif,,*.jpeg,,*.jpg,,*.ico,,*.png,,*.ppm,,*.svg,,*.svgz,,*.tga,,*.tif,,*.tiff,,*.webp,,*.xbm,,*.xcf,,*.xpm,,*.xspf,,*.xwd::'
" audio
set classify+='üéß::*.aac,,*.anx,,*.asf,,*.au,,*.axa,,*.flac,,*.m2a,,*.m4a,,*.mid,,*.midi,,*.mp3,,*.mpc,,*.oga,,*.ogg,,*.ogx,,*.ra,,*.ram,,*.rm,,*.spx,,*.wav,,*.wma,,*.ac3::'
" media
set classify+='üìº ::*.avi,,*.ts,,*.axv,,*.divx,,*.m2v,,*.m4p,,*.m4v,,.mka,,*.mkv,,*.mov,,*.mp4,,*.flv,,*.mp4v,,*.mpeg,,*.mpg,,*.nuv,,*.ogv,,*.pbm,,*.pgm,,*.qt,,*.vob,,*.wmv,,*.xvid::'
" office files
set classify+='üñπ ::*.doc,,*.docx::,ÔáÉ ::*.xls,,*.xls[mx]::,ÔáÑ ::*.pptx,,*.ppt::'

" ------------------------------------------------------------------------------

" What should be saved automatically between vifm sessions.  Drop "savedirs"
" value if you don't want vifm to remember last visited directories for you.

set vifminfo=dhistory,chistory,state,tui,shistory,
    \phistory,fhistory,dirstack,registers,bookmarks,bmarks

" ------------------------------------------------------------------------------

"                   Mappings
" tab mappings
nnoremap <space>t :tabnew<cr>
nnoremap <space>h :tabprevious<cr>
nnoremap <space>l :tabnext<cr>
nnoremap <space>x :tabclose<cr>

" map za to show hidden files to .
nnoremap . za

" open all images in current directory in sxiv thumbnail mode
nnoremap sx :!sxiv -tr %d & <cr>

" set selected wallpaper with a keybinding
nnoremap bg :!xwallpaper --zoom %f <cr>
nnoremap wp :!xwallpaper --zoom %f <cr>

" open current selected file in gimp
nnoremap gp :!gimp %f & <cr>

" Start shell in current directory
nnoremap s :shell<cr>

" Display sorting dialog
nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Open file in the background using its default program
nnoremap gb :file &<cr>l

" Interaction with system clipboard
" Yank current directory path into the clipboard
nnoremap yd :!echo %d | xclip %i<cr>

" Yank current file path into the clipboard
nnoremap yf :!echo %c:p | xclip %i<cr>

" Drag and Drop RipDrag
nmap cv :ripdrag<CR>

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw

" Faster Command Line Access
nnoremap ; :

" Faster FZF Finder
nmap ff :fzff<CR>

" Faster Movement
nnoremap J 5j
nnoremap K 5k

" q for quit
nnoremap q :q<cr>
" Open console in current directory
nnoremap ,t :!st &<cr>

" Open editor to edit vifmrc and apply settings after returning to vifm
nnoremap ,c :write | edit $MYVIFMRC | restart<cr>

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>

" Example of standard two-panel file managers mappings
nnoremap <f3> :!less %f<cr>
nnoremap <f4> :edit<cr>
nnoremap <f5> :copy<cr>
nnoremap <f6> :move<cr>
nnoremap <f7> :mkdir<space>
nnoremap <f8> :delete<cr>
